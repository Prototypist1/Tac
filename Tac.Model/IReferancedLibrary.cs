using System;
using System.Collections.Generic;
using System.Text;
using Tac.Model.Elements;

namespace Tac.Model
{
    // an assumbly as viewed by the current compliation
    public interface IAssembly<out TBacking>
    {
        NameKey Key { get; }
        IInterfaceType Scope { get; }
        // probably need this someday 
        //IReadOnlyList<IAssembly<TBacking>> References { get; }
        TBacking Backing { get; }
    }

    //public interface IBacking { }

    // this is almost an assembly
    // only the type used to represent the assembly by the current is generated by the type problem
    // this holds some assembly like infomation and can create an assmebly give the type
    //public interface IAsseblyPendingType<TAssembly, TBacking>
    //    where TAssembly : IAssembly<TBacking>
    //{
    //    public NameKey Key { get; }
    //    public IReadOnlyList<IMemberDefinition> Members { get; }
    //    public TAssembly Convert(IInterfaceType interfaceType);

    //}
}
